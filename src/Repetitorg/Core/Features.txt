1. Clients subsystem
	+ New collection of clients has no clients
	+ Create new client with some name and phone number
		+ Create new client with null name throws error
		+ Create new client with null phone number throws error
		+ Create new add client to storage
	+ Clients with same names and phoneNumber are equals clients
	+ Clients with same names are different clients
	+ Filter by name ignore case
		+ Filter by NULL throws exception
	+ Convert to string
	+ Creation of new clients with zero balance
	+ Creation payments with value in copex, date, payment document ad document number properties
	+ Payments of a client increase his balance
		+ Payment with negative or zero value throws exception
		+ Null-payments throws exception		
		+ Removing payment update client object in storage
	+ Remove payment
		+ Removing null payment throws error
		+ Removing nonexistent payment throws error
		+ Removing payment decrease client balance
		+ Removing payment update client object in storage
	+ Filtering payments by date
	+ Getting all clients (as copy of collection)
	+ Decrease balance
		+ decrease on negative value throws exception
		+ decreasing update database


2. Students subsystem
	+ New collection of students has no students
	+ Create new student with some name and phone number and client
		+ Create new student with null name throws error
		+ Create new student with null phone number throws error
		+ Create new student with null client throws error
		+ Create new add student to storage
	+ Students with same names and phoneNumber are equals students
	+ Students with same names are different students
	+ Filter by name ignore case		
		+ Filter by NULL throws exception
	+ Convert to string
	+ Getting all students (as copy of collection)


3. Project subsystem
	+ Addition new project with some name
		+ Addition projects with same names throws exception
		+ Addition projects with null name throws exception
		+ Create new add project to storage
	+ Getting all projects
	+ Comparision projects
	- Removing projects
		+ Simple removing
		- if exist tasks, throws exception
	+ Filtering by name
		+ Filtering by null throws exception
	- Completing projects
		+ Simple completing
		+ Completing project update Storage
		- if exist non complete tasks throws exception


4. Tasks subsystem
	+ Add task on date
		+ Add with null name throws exception
		+ Create new add task to storage
	+ Getting all tasks
	+ Getting tasks by date
	+ Clearing collection of tasks
	+ Removing task
		+ Removing nonexistent task has no effect
		+ Removing null has no effect
	+ Comparision tasks
	+ Completing tasks
		+ Completing update task in database
	+ Attach to project
		+ Simple attach to project
		+ Attach already attached task throws exception
		+ Attach task to came project has no effect
		+ Attach to complete project throws exception
		+ Attach to null project equal unattaching task
		+ Attach null task throws exception
		+ Attach update task in storage
	+ Getting by project
		+ Gettyng by null project return tasks without project
	+ Getting without project

5. Order subsystem
	+ Creating order with name
		+ Creating with null name throws error
		+ Create new add order to storage
	+ Add student to order with some cost
		+ Add with null student throws error
		+ Add with negative cost throws error
	+ Removing student from order
		+ Removing non-existent throws error
		+ Removing null throws error
	+ Getting all orders
		+ For new collection returns empty list
	+ Getting cost for student
		+ Getting for non existent student throws exception
		+ Getting for null student throws exception

6. Lesson subsystem
	+ Lesson can be Active, NonActive, Canceled, Moved, Completed
	+ Creating Lesson on some date and time, some length
	  and some order
	  + Creating with null order throws error
	  + Creating with non-positive length throws error	
	  + New Lesson is non-active
	  + Creating setup propertie correctly
	  + Create new add lesson to storage
	+ Lessons are equals if equals his dateTime, length, order and status
	+ Add Lesson to schedule (activate)
		+ Intersection with other lesson throws error
		+ Adding update lesson
		+ Adding non-active change statis to active
		+ Adding canceled lesson throws error
		+ Adding active lesson throws error
		+ Adding moved lesson throws error
		+ Adding completed lesson throws error
	+ Remove from schedule (deactivate)
		+ Removing change statis to non-active
		+ Remove completed Lesson throws error
		+ Remove non-active Lesson throws error
		+ Remove moved Lesson throws error
		+ Remove canceled Lesson throws error
		+ Removing update lesson
	+ Getting intersection with other lessons in schedule
	+ Getting intersection with all other lessons
	+ Getting all lessons
		+ For new collection returns empty list
	+ Getting Active/Complete lessons on date
	+ Getting all lessons on date
	+ Getting all lessons later than date
	+ Getting Active/Complete lessons later than date
	+ Getting all lessons earlier than date
	+ Getting Active/Complete lessons earlier than date
	+ Getting all lessons between dates
	+ Getting Active/Complete lessons between dates
	+ Getting all lessons by order
	+ Getting Active/Complete lessons by order
	+ Complete Lesson
		+ Completing decrease balance of clents
		+ Completeng non-active Lesson throws error
		+ Completing completed Lesson throws error
		+ Completing caceled Lesson throws error
		+ Completing moved Lesson throws error
		+ Completing Lesson update Storage
		+ Non integer cost rounded down
	+ Renew Lesson
		+ Renew increase balance of clents
		+ Renew change status to active
		+ Renew non-active Lesson throws error
		+ Renew active Lesson throws error
		+ Renew caceled Lesson throws error
		+ Renew moved Lesson throws error
		+ Renew Lesson update Storage
	+ Cancel Lesson
		+ Canceled Lesson removed from schedule
		+ Canceling completed Lesson throws error		
		+ Canceling moved Lesson throws error
		+ Canceling Lesson update Storage
	+ Restore canceled Lesson
		+ Restore non-active Lesson throws error
		+ Restore active Lesson throws error
		+ Restore completed Lesson throws error
		+ Restore moved Lesson throws error
		+ Restore make Lesson statis non-active
		+ Restore Lesson update Storage
	+ Moving Lesson on new date and time
		+ Moving non-active Lesson throws error
		+ Moving canceled Lesson throws error
		+ Moving moved Lesson throws error
		+ Moving completed Lesson throws error
		+ Intersect with other lessons throws error
		+ Moving Lesson update Storage
		+ Moved lesson in schedule
		+ Moving don't change order
		+ Moving don't change length
	+ Cancel moving Lesson
		+ Cancel non-active Lesson throws error
		+ Cancel active Lesson throws error
		+ Cancel completed Lesson throws error
		+ Cancel canceled Lesson throws error
		+ Cancel if final target Lesson Completed
		  throws error
		+ Cancel remove all next Lessons
		+ Cancel set MovedOn to null
		+ Cancel change status to non-active
		+ Cancel Lesson update lesson

7. Payment subsystem
	+ Getting all payments
	